Pre-release

Make examples and user files use new Server listening event
Fix todo-imp
Create benchmark and add documentation file for that.
Add better private properties to all classes that need it (Chunk, Block, Text, Slot)
    Remove privates from type files
    Make <Server>.server private and not show up in console.log(

Breaking changes (major update)

Change supplied earlyInfo version to protocolVersion
Change src\settings.defaults.serverList.maxPlayers to 0?
Change <Client>.brand
    Change <Client>.on('brandReceived') to <Client>.on('change', 'brand')
    Change <Client>.brand from "string | null" to "string | undefined"
    Remove from stateHandler, because sending brand is optional
Rename <Block>.block to <Block>.name
Rename <Client>.locale.langCode to code
Rename Server serverList function players to clients
Rename <Client>.kick to <Client>.remove for consistency
Implement <Entity>.on('change', ...
    Remove <Entity>.observe(
Rename leftClick to something else (because in air doesn't trigger)
    Test if mainHand is rightHand same event is triggered

Anytime

Implement <Client>.on('change', (type, newValue, oldValue) => { ... })
Add slot data file
Inventory
    Implement packets sent from Client (see Spreadsheet)
        Implement window_click
    Fix doc types for <Client>.inventory
Implement <Block>.displayName
Implement windows
    Implement Window class
        Make inventory inherit that
    Create openedWindow property in Client
        Set that to inventory when Client clicks in inventory
Test when playing a sound if the played sound is correct
Update data
    Change data\particles to array where id is index
    Add types to data
    Move data\keybinds[any].default to language specific
        Create folder for language specific?
    Create data converter in data loader
        Make data converter convert data\items to array with object with useful keys
Create PR for minecraft-protocol to exclude optional files from npm build
Improve quality score on NPM
    https://itnext.io/increasing-an-npm-packages-search-score-fb557f859300
    https://npms.io/about
    Change release workflow to wait after committing before publishing to npm so that NPM can see checks passing
    Check if NPM can see tests
        Add test coverage reporter
    Check if github pages is allowed for home page
        Custom domain is not needed, but it does improve score
    Add badges?
Tests
    Make tests for functions
    Rewrite src/test.js
    Add more extensive tests
    Rewrite Server tests with ProxyClient
    Write Client tests
        Add clientDefaultProperty tests to Client
Allow for two Players (and TabItems) to share same uuid (by actually setting them to different uuids, but use skin of original)
Move shared functions between TabItem and Player (like getSkin) to separate function file
Rewrite scripts/build
Rewrite js files in src/docs/
Add checks to check if input from constructor is valid with errors when wrong in BossBar class
_Change Github actions from status checks to check runs (https://docs.github.com/en/developers/apps/guides/creating-ci-tests-with-the-checks-api)
    Waiting for https://github.com/orgs/community/discussions/36226
Fill <Chunk>.blocks with empty objects so that <Chunk>.blocks[x][y][z] never throws an error
Add good first issue label to issues
Implement <Client>.blocks
Improve CustomError
    Add hints to CustomError
        Add hint to Chunk unknown x, y and z to include "Chunk positions are relative to the Chunk"
        Add hint to unknown StateValue
    Implement not called customError
        Use for position
    Rewrite CustomError and change constructor arguments in better order
    Add code property to CustomError (like keepAliveTimeout)
Create default block states
    Create table of states and blocks
Move scripts/build/*.js npmRun function to separate function file
Move TabItem/get function to separate function file
Move <Client>.entity( CustomEntityClasses to separate file so that entities.types.js can access same file
Fix docs for <Boat>.on(, because inherited events are not shown
Add docs title to settings.json
Add typescript declaration file check
Make use of position and location consistent
Remove positional arguments in event callback in favor of objects (or make it atleast consistent)
Beautify Client.d.ts
At all places where an error is emitted, try to continue the code as much as possible
Make some <Entity>.sound options optional
Implement build check, so that only modified files have to be built